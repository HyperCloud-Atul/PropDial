{"ast":null,"code":"var _jsxFileName = \"F:\\\\Apps\\\\hypercloud-github\\\\PropDial\\\\code\\\\v0.2\\\\src\\\\Components\\\\CircularProgressBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport CountUp from \"react-countup\";\nimport ScrollTrigger from \"react-scroll-trigger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CircularProgressBar() {\n  _s();\n  const [percentage, setPercentage] = useState(0);\n  const [counterOn, setCounterOn] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      if (percentage < 70) {\n        setPercentage(percentage + 1);\n      }\n    }, 50);\n  }, [percentage]);\n  return /*#__PURE__*/_jsxDEV(ScrollTrigger, {\n    onEnter: () => setCounterOn(true),\n    onExit: () => setCounterOn(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Circular progress bar in React \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 150,\n          marginLeft: 550\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: percentage,\n          text: `${/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"counter-numbers\",\n            \"data-number\": \"100\",\n            children: [counterOn && /*#__PURE__*/_jsxDEV(CountUp, {\n              start: 0,\n              end: 75,\n              duration: 3,\n              delay: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(CircularProgressBar, \"DYUvHSBGQeBM/r8hOevs7K64dUE=\");\n_c = CircularProgressBar;\nexport default CircularProgressBar;\nvar _c;\n$RefreshReg$(_c, \"CircularProgressBar\");","map":{"version":3,"names":["React","useEffect","useState","CircularProgressbar","CountUp","ScrollTrigger","jsxDEV","_jsxDEV","CircularProgressBar","_s","percentage","setPercentage","counterOn","setCounterOn","setTimeout","onEnter","onExit","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","marginLeft","value","text","className","start","end","duration","delay","_c","$RefreshReg$"],"sources":["F:/Apps/hypercloud-github/PropDial/code/v0.2/src/Components/CircularProgressBar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport ScrollTrigger from \"react-scroll-trigger\";\r\n\r\nfunction CircularProgressBar() {\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [counterOn, setCounterOn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (percentage < 70) {\r\n        setPercentage(percentage + 1);\r\n      }\r\n    }, 50);\r\n  }, [percentage]);\r\n\r\n  return (\r\n    <ScrollTrigger\r\n      onEnter={() => setCounterOn(true)}\r\n      onExit={() => setCounterOn(false)}\r\n    >\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h4>Circular progress bar in React </h4>\r\n        <div style={{ width: 150, marginLeft: 550 }}>\r\n          <CircularProgressbar\r\n            value={percentage}\r\n            text={`${(\r\n              <h2 className=\"counter-numbers\" data-number=\"100\">\r\n                {counterOn && (\r\n                  <CountUp start={0} end={75} duration={3} delay={0} />\r\n                )}\r\n                +\r\n              </h2>\r\n            )}%`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </ScrollTrigger>\r\n  );\r\n}\r\nexport default CircularProgressBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,OAAO,4CAA4C;AACnD,OAAOC,OAAO,MAAM,eAAe;AAEnC,OAAOC,aAAa,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,MAAM;MACf,IAAIJ,UAAU,GAAG,EAAE,EAAE;QACnBC,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;MAC/B;IACF,CAAC,EAAE,EAAE,CAAC;EACR,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA,CAACF,aAAa;IACZU,OAAO,EAAEA,CAAA,KAAMF,YAAY,CAAC,IAAI,CAAE;IAClCG,MAAM,EAAEA,CAAA,KAAMH,YAAY,CAAC,KAAK,CAAE;IAAAI,QAAA,eAElCV,OAAA;MAAKW,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,gBAClCV,OAAA;QAAAU,QAAA,EAAI;MAA+B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxChB,OAAA;QAAKW,KAAK,EAAE;UAAEM,KAAK,EAAE,GAAG;UAAEC,UAAU,EAAE;QAAI,CAAE;QAAAR,QAAA,eAC1CV,OAAA,CAACJ,mBAAmB;UAClBuB,KAAK,EAAEhB,UAAW;UAClBiB,IAAI,EAAG,gBACLpB,OAAA;YAAIqB,SAAS,EAAC,iBAAiB;YAAC,eAAY,KAAK;YAAAX,QAAA,GAC9CL,SAAS,iBACRL,OAAA,CAACH,OAAO;cAACyB,KAAK,EAAE,CAAE;cAACC,GAAG,EAAE,EAAG;cAACC,QAAQ,EAAE,CAAE;cAACC,KAAK,EAAE;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACnD,EAAC,GAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAEpB;AAACd,EAAA,CAnCQD,mBAAmB;AAAAyB,EAAA,GAAnBzB,mBAAmB;AAoC5B,eAAeA,mBAAmB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}